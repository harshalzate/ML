In class when you create a variable in the function then you don't have to specify the self. Only specify self for variable in the constructor and calling differerent functions. 
You have different magical methods whose magic lies in what you do the objects. like print when pass object to the print then by automataically __str__ method will be called and it will
retured the __str__ method(Function). Similarly for the addition and division, multiplication where you specify the "+" between the two objects and specifically you have to mentioned other
object along with self in the method defination of addition, division etc.
Different magic methods are __str__ for print, __mul__ for multiplication, __add__ for addition and __trudiv__ for division 

class A:
  def __init__(self):
    self.a='harhal'


  t=5
  def m(self):
    y= self.t + 6
    return y  
aa=A()
aa.a
aa.t
aa.m() 

Very very important example for understanding the fact that you can create attribute anywhere without self and can can access the attibute anywhere with self but not needed to be specified
with self. Only the attibutes in init and otherones specified outside of the functions can be acccessed by the object outside.


## File Reading: Readlines reads the file line by line and return the list of the lines where as when you read by read it return the entire file in one go.
formats which can be converted to json are mentioned how to store by default. 
nonlocal used like  global but for variables in enclosing function space.

-- staticmethod: Are used to define a method in a class which can be access by class directly and this method does not take object as a input parameter.



# DataFrame:
how to add new row , append is depreciated so either directly use df.loc[7] = ['h',49,90]  
